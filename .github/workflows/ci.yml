name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure binstubs are executable
        run: chmod +x bin/*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure binstubs are executable
        run: chmod +x bin/*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure binstubs are executable
        run: chmod +x bin/*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config google-chrome-stable libnss3 libxi6 libxss1 libappindicator3-1 fonts-liberation

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure binstubs are executable
        run: chmod +x bin/*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Prepare test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          # REDIS_URL: redis://localhost:6379/0
        run: bundle exec rspec

      - name: Precompile assets
        env:
          RAILS_ENV: production
          SECRET_KEY_BASE: dummy_key_for_ci
        run: |
          rm -rf public/assets
          bundle exec rails assets:precompile

      - name: Deploy to Netlify
        if: success()
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: ./public
          production-deploy: true
          deploy-message: "Deploy from GitHub Actions CI"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}


      - name: Upload Rails test log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rails-test-log
          path: log/test.log
          if-no-files-found: ignore

      - name: Upload forecast debug log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: forecast-debug-log
          path: tmp/forecast_debug.log
          if-no-files-found: ignore

      - name: Upload RSpec debug log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rspec-debug-log
          path: tmp/rspec_debug.log
          if-no-files-found: ignore

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/.resultset.json
          fail_ci_if_error: true

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
